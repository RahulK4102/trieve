---
import Footer from "../../../components/Footer.astro";
import SearchLayout from "../../../layouts/SearchLayout.astro";
import {
  isChunkMetadataWithVotes,
  type ChunkMetadataWithVotes,
  type SingleChunkDTO,
} from "../../../../utils/apiTypes";
import { EditChunkPageForm } from "../../../components/EditChunkPageForm";

const dataset = import.meta.env.PUBLIC_DATASET as string;
const apiHost = import.meta.env.PUBLIC_API_HOST as string;
const alwaysRequireAuth = import.meta.env.PUBLIC_ALWAYS_REQUIRE_AUTH as string;

const { chunkId } = Astro.params;
let specificChunk: SingleChunkDTO;

try {
  if (alwaysRequireAuth === "on") {
    throw new Error("Auth always required");
  }

  const specificChunkResult = await fetch(`${apiHost}/chunk/${chunkId ?? ""}`, {
    method: "GET",
    headers: {
      "AF-Dataset": dataset,
    },
  });
  const specificChunkJson = (await specificChunkResult.json()) as unknown;

  if (!isChunkMetadataWithVotes(specificChunkJson)) {
    throw new Error("Invalid chunk metadata");
  }

  specificChunk = {
    metadata: specificChunkJson,
    status: specificChunkResult.status,
  };
} catch (e) {
  specificChunk = { metadata: null, status: 404 };
}
---

<head>
  <script src="/tinymce/tinymce.min.js" :inline></script>
</head>
<SearchLayout title={`Edit Chunk | Arguflow Search`}>
  <EditChunkPageForm
    chunkId={chunkId}
    defaultResultChunk={specificChunk as {
      metadata: ChunkMetadataWithVotes;
      status: number;
    }}
    client:load
  />
  <div class="flex-1"></div>
  <Footer />
</SearchLayout>
