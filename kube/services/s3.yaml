apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: s3-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: s3
spec:
  selector:
    matchLabels:
      app: s3
  template:
    metadata:
      labels:
        app: s3
    spec:
      containers:
      - name: s3
        image: minio/minio:RELEASE.2023-09-27T15-22-50Z
        args:
        - server
        - --console-address
        - ":42625"
        - /data
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MINIO_ROOT_USER
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MINIO_ROOT_PASSWORD
        ports:
        - containerPort: 9000
        - containerPort: 42625
        volumeMounts:
        - name: s3-data
          mountPath: /data
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: s3-data
        persistentVolumeClaim:
          claimName: s3-data-pvc
---
apiVersion: batch/v1
kind: Job
metadata:
  name: s3-client-setup
spec:
  template:
    spec:
      containers:
      - name: s3-client-setup
        image: minio/mc
        command: ["/bin/sh", "-c"]
        args:
          - |
            mc config host add myminio http://s3:9000 $(MINIO_ROOT_USER) $(MINIO_ROOT_PASSWORD) &&
            mc alias set myminio http://s3:9000 $(MINIO_ROOT_USER) $(MINIO_ROOT_PASSWORD) &&
            mc admin user add myminio $(S3_ACCESS_KEY) $(S3_SECRET_KEY) &&
            mc admin policy attach myminio readwrite --user $(S3_ACCESS_KEY) &&
            mc mb myminio/$(S3_BUCKET) &&
            exit 0;
        env:
          - name: MINIO_ROOT_USER
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: MINIO_ROOT_USER
          - name: MINIO_ROOT_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: MINIO_ROOT_PASSWORD
          - name: S3_ACCESS_KEY
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: S3_ACCESS_KEY
          - name: S3_SECRET_KEY
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: S3_SECRET_KEY
          - name: S3_BUCKET
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: S3_BUCKET
      restartPolicy: OnFailure

---

apiVersion: v1
kind: Service
metadata:
  name: s3
spec:
  ports:
  - name: s3
    port: 9000
    targetPort: 9000
  - name: dashboard
    port: 42625
    targetPort: 42625
  selector:
    app: s3
